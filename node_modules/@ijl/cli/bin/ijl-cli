#!/usr/bin/env node

const program = require("commander");

const {
    version
} = require("../package");

const setEnv = (env, value) => {
    if (value) {
        process.env[env] = value;
    }
    return value;
};

const HELP_MESSAGE = `
Для инициализации нового проекта наберите: ijl-cli --init
Для запуска дев сервера: ijl-cli --server --port=8099
Для запуска сборки: ijl-cli --build --dev
`;

program
    .version(version)
    .usage("[command] [options]")
    .option("--build", "build project")
    .option("--server", "start server")
    .option("--dev", "build dev")
    .option("-B --with-open-browser", "open in browser")
    .option("-P --port [port]", "server port", "8090")
    .option("--init", "initialize new project")
    .option("--advanced", "В связке с init создает новый проект немного проработанней")

    .on("--help", () => {
        console.log(HELP_MESSAGE);
    })
    .parse(process.argv);

if (program.init) {
    require('../src/cli')(program)
} else if (program.build) {
    if (program.dev) {
        process.env.NODE_ENV = "development";
    }
    require("../src/webpack/build")();
} else if (program.server) {
    setEnv('NODE_ENV', 'development');
    setEnv('LOCALES', './locales');
    require("../src/server")(program);
}